[{"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\index.js":"1","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\App.js":"2","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\reportWebVitals.js":"3","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pages.js":"4","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pegawai.js":"5","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\home.js":"6","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\login.js":"7","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\components\\navbar.js":"8","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\register.js":"9","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pelanggaran.js":"10","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\siswa.js":"11","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pelanggaran_siswa.js":"12"},{"size":547,"mtime":1611208760369,"results":"13","hashOfConfig":"14"},{"size":265,"mtime":1613005699031,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"14"},{"size":806,"mtime":1620269763159,"results":"17","hashOfConfig":"14"},{"size":7692,"mtime":1613008465096,"results":"18","hashOfConfig":"14"},{"size":5082,"mtime":1616034592948,"results":"19","hashOfConfig":"14"},{"size":3194,"mtime":1614052026255,"results":"20","hashOfConfig":"14"},{"size":1016,"mtime":1617598158420,"results":"21","hashOfConfig":"14"},{"size":3625,"mtime":1614052030081,"results":"22","hashOfConfig":"14"},{"size":7749,"mtime":1614821239494,"results":"23","hashOfConfig":"14"},{"size":9386,"mtime":1616030065145,"results":"24","hashOfConfig":"14"},{"size":15914,"mtime":1620269730351,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"97ahyd",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\index.js",[],["53","54"],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\App.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\reportWebVitals.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pages.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pegawai.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\home.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\login.js",["55"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {Card, Form, Button, Container} from 'react-bootstrap'\r\nimport {Navbar, Nav} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Register from './register'\r\n\r\nclass Login extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            message: \"\",\r\n            logged: true\r\n        }\r\n    }\r\n    Login = event => {\r\n        const base_url = \"http://localhost:2910\"\r\n        event.preventDefault()\r\n        let sendData = {\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        let url = base_url + \"/login\"\r\n        \r\n        axios.post(url, sendData)\r\n        .then(response => {\r\n            this.setState({logged: response.data.logged})\r\n            if (this.state.logged) {\r\n                let user = response.data.data\r\n                let token = response.data.token\r\n                localStorage.setItem(\"user\", JSON.stringify(user))\r\n                localStorage.setItem(\"token\", token)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                this.setState({message: response.data.message})\r\n            }\r\n        })\r\n        .catch(error => alert(error))\r\n    }\r\n    render () {\r\n        <Register/>\r\n        return(\r\n            <Container className=\"container d-flex justify-content-center align-items-center\">\r\n                <Card className=\"col-sm-6 card my-5\">\r\n                <Card.Header className=\"card-header bg-primary text-white text-center\">LOGIN</Card.Header>\r\n                <Card.Body>\r\n                    { !this.state.logged ? \r\n                        (\r\n                            <div className=\"alert alert-danger mt-1\">\r\n                                { this.state.message }\r\n                            </div>\r\n                        ) : null }\r\n                    <Form onSubmit={ev => this.Login(ev)}>\r\n                    <Card.Text>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" value={this.state.username}\r\n                            onChange={ev => this.setState({username: ev.target.value})}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                            onChange={ev => this.setState({password: ev.target.value})}\r\n                            autoComplete=\"false\" />\r\n                        </Form.Group>\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" type=\"submit\">Submit</Button>\r\n                    <Nav.Link><Link to='/register'><strong>Dont have an account? Sign Up</strong></Link></Nav.Link>\r\n                    </Form>\r\n                </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\components\\navbar.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\register.js",["56"],"import React from 'react'\r\nimport axios from 'axios'\r\nimport {Card, Form, Button, Container} from 'react-bootstrap'\r\nimport {NavBar, Nav} from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport Login from './login'\r\n\r\n\r\nclass Register extends React.Component {\r\n    constructor () {\r\n        super();\r\n        this.state = {\r\n            email: \"\",\r\n            username: \"\",\r\n            password: \"\",\r\n            message: \"\",\r\n            logged: true\r\n        }\r\n    }\r\n    Register = event => {\r\n        const base_url = \"http://localhost:2910\"\r\n        event.preventDefault()\r\n        let sendData = {\r\n            email: this.state.email,\r\n            username: this.state.username,\r\n            password: this.state.password\r\n        }\r\n        let url = base_url + \"/register\"\r\n        \r\n        axios.post(url, sendData)\r\n        .then(response => {\r\n            this.setState({logged: response.data.logged})\r\n            if (this.state.logged) {\r\n                let user = response.data.data\r\n                let token = response.data.token\r\n                localStorage.setItem(\"user\", JSON.stringify(user))\r\n                localStorage.setItem(\"token\", token)\r\n                this.props.history.push(\"/\")\r\n            } else {\r\n                this.setState({message: response.data.message})\r\n            }\r\n        })\r\n        .catch(error => alert(error))\r\n    }\r\n    render () {\r\n        <Login/>\r\n        return(\r\n            <Container className=\"container d-flex justify-content-center align-items-center\">\r\n                <Card className=\"col-sm-6 card my-5\">\r\n                <Card.Header className=\"card-header bg-danger text-white text-center\"><strong>Register</strong></Card.Header>\r\n                <Card.Body>\r\n                    { !this.state.logged ? \r\n                        (\r\n                            <div className=\"alert alert-danger mt-1\">\r\n                                { this.state.message }\r\n                            </div>\r\n                        ) : null }\r\n                    <Form onSubmit={ev => this.Register(ev)}>\r\n                    <Card.Text>\r\n                    <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Email\" value={this.state.email}\r\n                            onChange={ev => this.setState({email: ev.target.value})}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Username\" value={this.state.username}\r\n                            onChange={ev => this.setState({username: ev.target.value})}/>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control type=\"password\" placeholder=\"Password\" value={this.state.password}\r\n                            onChange={ev => this.setState({password: ev.target.value})}\r\n                            autoComplete=\"false\" />\r\n                        </Form.Group>\r\n                    </Card.Text>\r\n                    <Button variant=\"danger\" type=\"submit\">Submit</Button>\r\n                    <Nav.Link><Link to='/login'><strong>Already have an account? Login</strong></Link></Nav.Link>\r\n                    </Form>\r\n                </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register","D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pelanggaran.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\siswa.js",[],"D:\\Nodejs\\moklet_rest_api_pegawai\\react1\\src\\pages\\pelanggaran_siswa.js",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":4,"column":9,"nodeType":"65","messageId":"66","endLine":4,"endColumn":15},{"ruleId":"63","severity":1,"message":"67","line":4,"column":9,"nodeType":"65","messageId":"66","endLine":4,"endColumn":15},{"ruleId":"68","severity":1,"message":"69","line":170,"column":74,"nodeType":"70","messageId":"71","endLine":170,"endColumn":76},{"ruleId":"72","severity":1,"message":"73","line":368,"column":42,"nodeType":"74","endLine":368,"endColumn":106},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'Navbar' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]